#[version = "0.0.5"]
def @main(%input_1: Tensor[(1, 49, 10, 1), int8] /* ty=Tensor[(1, 49, 10, 1), int8] span=input_1:0:0 */, %v_param_1: Tensor[(10, 4, 1, 64), int8] /* ty=Tensor[(10, 4, 1, 64), int8] span=functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D:0:0 */, %v_param_2: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D:0:0 */, %v_param_3: Tensor[(3, 3, 64, 1), int8] /* ty=Tensor[(3, 3, 64, 1), int8] span=functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_6:0:0 */, %v_param_4: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_6:0:0 */, %v_param_5: Tensor[(1, 1, 64, 64), int8] /* ty=Tensor[(1, 1, 64, 64), int8] span=functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D:0:0 */, %v_param_6: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D:0:0 */, %v_param_7: Tensor[(3, 3, 64, 1), int8] /* ty=Tensor[(3, 3, 64, 1), int8] span=functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_18:0:0 */, %v_param_8: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_18:0:0 */, %v_param_9: Tensor[(1, 1, 64, 64), int8] /* ty=Tensor[(1, 1, 64, 64), int8] span=functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D:0:0 */, %v_param_10: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D:0:0 */, %v_param_11: Tensor[(3, 3, 64, 1), int8] /* ty=Tensor[(3, 3, 64, 1), int8] span=functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_30:0:0 */, %v_param_12: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_30:0:0 */, %v_param_13: Tensor[(1, 1, 64, 64), int8] /* ty=Tensor[(1, 1, 64, 64), int8] span=functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D:0:0 */, %v_param_14: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D:0:0 */, %v_param_15: Tensor[(3, 3, 64, 1), int8] /* ty=Tensor[(3, 3, 64, 1), int8] span=functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_42:0:0 */, %v_param_16: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_42:0:0 */, %v_param_17: Tensor[(1, 1, 64, 64), int8] /* ty=Tensor[(1, 1, 64, 64), int8] span=functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D:0:0 */, %v_param_18: Tensor[(64), int32] /* ty=Tensor[(64), int32] span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D:0:0 */, %v_param_19: Tensor[(12, 64), int8] /* ty=Tensor[(12, 64), int8] span=functional_1/dense/MatMul;StatefulPartitionedCall/functional_1/dense/MatMul:0:0 */, %v_param_20: Tensor[(12), int32] /* ty=Tensor[(12), int32] span=unknown_54:0:0 */, output_tensor_names=["Identity"]) -> Tensor[(1, 12), int8] {
  %0 = qnn.conv2d(%input_1, %v_param_1, 87 /* ty=int32 span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */, 0 /* ty=int32 span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */, 0.574836f /* ty=float32 span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */, meta[relay.Constant][0] /* ty=Tensor[(64), float32] span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */, strides=[2, 2], padding=[4, 1, 5, 1], channels=64, kernel_size=[10, 4], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */;
  %1 = nn.bias_add(%0, %v_param_2, axis=3) /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */;
  %2 = qnn.requantize(%1, meta[relay.Constant][1] /* ty=Tensor[(64), float32] span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */, 0 /* ty=int32 span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */, 0.106924f /* ty=float32 span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */, -128 /* ty=int32 span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */, axis=3, rounding="UPWARD", compute_dtype="int64", out_dtype="int8") /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */;
  %3 = clip(%2, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1:0:0 */;
  %4 = qnn.conv2d(%3, %v_param_3, -128 /* ty=int32 span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */, 0 /* ty=int32 span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */, 0.106924f /* ty=float32 span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */, meta[relay.Constant][2] /* ty=Tensor[(64), float32] span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */, padding=[1, 1, 1, 1], groups=64, channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWOI", out_dtype="int32") /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */;
  %5 = nn.bias_add(%4, %v_param_4, axis=3) /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */;
  %6 = qnn.requantize(%5, meta[relay.Constant][3] /* ty=Tensor[(64), float32] span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */, 0 /* ty=int32 span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */, 0.0957676f /* ty=float32 span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */, -128 /* ty=int32 span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */, axis=3, rounding="UPWARD", compute_dtype="int64", out_dtype="int8") /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */;
  %7 = clip(%6, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61:0:0 */;
  %8 = qnn.conv2d(%7, %v_param_5, -128 /* ty=int32 span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */, 0 /* ty=int32 span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */, 0.0957676f /* ty=float32 span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */, meta[relay.Constant][4] /* ty=Tensor[(64), float32] span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */;
  %9 = nn.bias_add(%8, %v_param_6, axis=3) /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */;
  %10 = qnn.requantize(%9, meta[relay.Constant][5] /* ty=Tensor[(64), float32] span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */, 0 /* ty=int32 span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */, 0.0755872f /* ty=float32 span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */, -128 /* ty=int32 span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */, axis=3, rounding="UPWARD", compute_dtype="int64", out_dtype="int8") /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */;
  %11 = clip(%10, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1:0:0 */;
  %12 = qnn.conv2d(%11, %v_param_7, -128 /* ty=int32 span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */, 0 /* ty=int32 span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */, 0.0755872f /* ty=float32 span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */, meta[relay.Constant][6] /* ty=Tensor[(64), float32] span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */, padding=[1, 1, 1, 1], groups=64, channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWOI", out_dtype="int32") /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */;
  %13 = nn.bias_add(%12, %v_param_8, axis=3) /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */;
  %14 = qnn.requantize(%13, meta[relay.Constant][7] /* ty=Tensor[(64), float32] span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */, 0 /* ty=int32 span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */, 0.0674262f /* ty=float32 span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */, -128 /* ty=int32 span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */, axis=3, rounding="UPWARD", compute_dtype="int64", out_dtype="int8") /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */;
  %15 = clip(%14, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181:0:0 */;
  %16 = qnn.conv2d(%15, %v_param_9, -128 /* ty=int32 span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */, 0 /* ty=int32 span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */, 0.0674262f /* ty=float32 span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */, meta[relay.Constant][8] /* ty=Tensor[(64), float32] span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */;
  %17 = nn.bias_add(%16, %v_param_10, axis=3) /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */;
  %18 = qnn.requantize(%17, meta[relay.Constant][9] /* ty=Tensor[(64), float32] span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */, 0 /* ty=int32 span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */, 0.0540593f /* ty=float32 span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */, -128 /* ty=int32 span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */, axis=3, rounding="UPWARD", compute_dtype="int64", out_dtype="int8") /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */;
  %19 = clip(%18, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1:0:0 */;
  %20 = qnn.conv2d(%19, %v_param_11, -128 /* ty=int32 span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */, 0 /* ty=int32 span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */, 0.0540593f /* ty=float32 span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */, meta[relay.Constant][10] /* ty=Tensor[(64), float32] span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */, padding=[1, 1, 1, 1], groups=64, channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWOI", out_dtype="int32") /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */;
  %21 = nn.bias_add(%20, %v_param_12, axis=3) /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */;
  %22 = qnn.requantize(%21, meta[relay.Constant][11] /* ty=Tensor[(64), float32] span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */, 0 /* ty=int32 span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */, 0.0536146f /* ty=float32 span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */, -128 /* ty=int32 span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */, axis=3, rounding="UPWARD", compute_dtype="int64", out_dtype="int8") /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */;
  %23 = clip(%22, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301:0:0 */;
  %24 = qnn.conv2d(%23, %v_param_13, -128 /* ty=int32 span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */, 0 /* ty=int32 span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */, 0.0536146f /* ty=float32 span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */, meta[relay.Constant][12] /* ty=Tensor[(64), float32] span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */;
  %25 = nn.bias_add(%24, %v_param_14, axis=3) /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */;
  %26 = qnn.requantize(%25, meta[relay.Constant][13] /* ty=Tensor[(64), float32] span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */, 0 /* ty=int32 span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */, 0.0334934f /* ty=float32 span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */, -128 /* ty=int32 span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */, axis=3, rounding="UPWARD", compute_dtype="int64", out_dtype="int8") /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */;
  %27 = clip(%26, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1:0:0 */;
  %28 = qnn.conv2d(%27, %v_param_15, -128 /* ty=int32 span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */, 0 /* ty=int32 span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */, 0.0334934f /* ty=float32 span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */, meta[relay.Constant][14] /* ty=Tensor[(64), float32] span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */, padding=[1, 1, 1, 1], groups=64, channels=64, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="HWOI", out_dtype="int32") /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */;
  %29 = nn.bias_add(%28, %v_param_16, axis=3) /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */;
  %30 = qnn.requantize(%29, meta[relay.Constant][15] /* ty=Tensor[(64), float32] span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */, 0 /* ty=int32 span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */, 0.0401991f /* ty=float32 span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */, -128 /* ty=int32 span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */, axis=3, rounding="UPWARD", compute_dtype="int64", out_dtype="int8") /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */;
  %31 = clip(%30, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421:0:0 */;
  %32 = qnn.conv2d(%31, %v_param_17, -128 /* ty=int32 span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */, 0 /* ty=int32 span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */, 0.0401991f /* ty=float32 span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */, meta[relay.Constant][16] /* ty=Tensor[(64), float32] span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="HWIO", out_dtype="int32") /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */;
  %33 = nn.bias_add(%32, %v_param_18, axis=3) /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */;
  %34 = qnn.requantize(%33, meta[relay.Constant][17] /* ty=Tensor[(64), float32] span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */, 0 /* ty=int32 span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */, 0.0958802f /* ty=float32 span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */, -128 /* ty=int32 span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */, axis=3, rounding="UPWARD", compute_dtype="int64", out_dtype="int8") /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */;
  %35 = clip(%34, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 25, 5, 64), int8] span=functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1:0:0 */;
  %36 = cast(%35, dtype="int32") /* ty=Tensor[(1, 25, 5, 64), int32] span=functional_1/average_pooling2d/AvgPool;StatefulPartitionedCall/functional_1/average_pooling2d/AvgPool:0:0 */;
  %37 = nn.avg_pool2d(%36, pool_size=[25, 5], strides=[25, 5], padding=[0, 0, 0, 0], layout="NHWC") /* ty=Tensor[(1, 1, 1, 64), int32] span=functional_1/average_pooling2d/AvgPool;StatefulPartitionedCall/functional_1/average_pooling2d/AvgPool:0:0 */;
  %38 = cast(%37, dtype="int8") /* ty=Tensor[(1, 1, 1, 64), int8] span=functional_1/average_pooling2d/AvgPool;StatefulPartitionedCall/functional_1/average_pooling2d/AvgPool:0:0 */;
  %39 = reshape(%38, newshape=[-1, 64]) /* ty=Tensor[(1, 64), int8] span=functional_1/flatten/Reshape;StatefulPartitionedCall/functional_1/flatten/Reshape:0:0 */;
  %40 = reshape(%39, newshape=[-1, 64]) /* ty=Tensor[(1, 64), int8] span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */;
  %41 = qnn.dense(%40, %v_param_19, -128 /* ty=int32 span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */, 0 /* ty=int32 span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */, 0.0958802f /* ty=float32 span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */, 0.0087238f /* ty=float32 span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */, units=12, out_dtype="int32") /* ty=Tensor[(1, 12), int32] span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */;
  %42 = nn.bias_add(%41, %v_param_20) /* ty=Tensor[(1, 12), int32] span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */;
  %43 = qnn.requantize(%42, 0.00083644f /* ty=float32 span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */, 0 /* ty=int32 span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */, 0.142178f /* ty=float32 span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */, 33 /* ty=int32 span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */, rounding="UPWARD", compute_dtype="int64", out_dtype="int8") /* ty=Tensor[(1, 12), int8] span=functional_1/dense/BiasAdd;StatefulPartitionedCall/functional_1/dense/BiasAdd:0:0 */;
  %44 = qnn.dequantize(%43, 0.142178f /* ty=float32 span=Identity:0:0 */, 33 /* ty=int32 span=Identity:0:0 */, out_dtype="float32") /* ty=Tensor[(1, 12), float32] span=Identity:0:0 */;
  %45 = nn.softmax(%44) /* ty=Tensor[(1, 12), float32] span=Identity:0:0 */;
  qnn.quantize(%45, 0.00390625f /* ty=float32 span=Identity:0:0 */, -128 /* ty=int32 span=Identity:0:0 */, out_dtype="int8") /* ty=Tensor[(1, 12), int8] span=Identity:0:0 */
}

#[metadata]
{
  "root": 1, 
  "nodes": [
    {
      "type_key": ""
    }, 
    {
      "type_key": "Map", 
      "keys": [
        "relay.Constant"
      ], 
      "data": [2]
    }, 
    {
      "type_key": "Array", 
      "data": [
        3, 
        11, 
        15, 
        21, 
        24, 
        30, 
        34, 
        40, 
        43, 
        49, 
        53, 
        59, 
        62, 
        68, 
        72, 
        78, 
        81, 
        87
      ]
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "8", 
        "data": "0", 
        "span": "6", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "VirtualDevice", 
      "attrs": {
        "device_type_int": "-1", 
        "memory_scope": "5", 
        "target": "0", 
        "virtual_device_id": "-1"
      }
    }, 
    {
      "type_key": "runtime.String"
    }, 
    {
      "type_key": "Span", 
      "attrs": {
        "column": "0", 
        "end_column": "0", 
        "end_line": "0", 
        "line": "0", 
        "source_name": "7"
      }
    }, 
    {
      "type_key": "SourceName", 
      "repr_str": "functional_1/activation/Relu;StatefulPartitionedCall/functional_1/activation/Relu;functional_1/batch_normalization/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization/FusedBatchNormV3;unknown_0;functional_1/conv2d/BiasAdd;StatefulPartitionedCall/functional_1/conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d/Conv2D;StatefulPartitionedCall/functional_1/conv2d/Conv2D1"
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "9", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [10]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "12", 
        "data": "1", 
        "span": "6", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "13", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [14]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "18", 
        "data": "2", 
        "span": "16", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "Span", 
      "attrs": {
        "column": "0", 
        "end_column": "0", 
        "end_line": "0", 
        "line": "0", 
        "source_name": "17"
      }
    }, 
    {
      "type_key": "SourceName", 
      "repr_str": "functional_1/activation_1/Relu;StatefulPartitionedCall/functional_1/activation_1/Relu;functional_1/batch_normalization_1/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_1/FusedBatchNormV3;functional_1/depthwise_conv2d/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d/depthwise;functional_1/depthwise_conv2d/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_61"
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "19", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [20]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "22", 
        "data": "3", 
        "span": "16", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "23", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [20]
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "27", 
        "data": "4", 
        "span": "25", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "Span", 
      "attrs": {
        "column": "0", 
        "end_column": "0", 
        "end_line": "0", 
        "line": "0", 
        "source_name": "26"
      }
    }, 
    {
      "type_key": "SourceName", 
      "repr_str": "functional_1/activation_2/Relu;StatefulPartitionedCall/functional_1/activation_2/Relu;functional_1/batch_normalization_2/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_2/FusedBatchNormV3;unknown_12;functional_1/conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_1/Conv2D;StatefulPartitionedCall/functional_1/conv2d_1/Conv2D1"
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "28", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [29]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "31", 
        "data": "5", 
        "span": "25", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "32", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [33]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "37", 
        "data": "6", 
        "span": "35", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "Span", 
      "attrs": {
        "column": "0", 
        "end_column": "0", 
        "end_line": "0", 
        "line": "0", 
        "source_name": "36"
      }
    }, 
    {
      "type_key": "SourceName", 
      "repr_str": "functional_1/activation_3/Relu;StatefulPartitionedCall/functional_1/activation_3/Relu;functional_1/batch_normalization_3/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_3/FusedBatchNormV3;functional_1/depthwise_conv2d_1/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/depthwise;functional_1/depthwise_conv2d_1/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_1/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_181"
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "38", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [39]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "41", 
        "data": "7", 
        "span": "35", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "42", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [39]
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "46", 
        "data": "8", 
        "span": "44", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "Span", 
      "attrs": {
        "column": "0", 
        "end_column": "0", 
        "end_line": "0", 
        "line": "0", 
        "source_name": "45"
      }
    }, 
    {
      "type_key": "SourceName", 
      "repr_str": "functional_1/activation_4/Relu;StatefulPartitionedCall/functional_1/activation_4/Relu;functional_1/batch_normalization_4/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_4/FusedBatchNormV3;unknown_24;functional_1/conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_2/Conv2D;StatefulPartitionedCall/functional_1/conv2d_2/Conv2D1"
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "47", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [48]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "50", 
        "data": "9", 
        "span": "44", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "51", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [52]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "56", 
        "data": "10", 
        "span": "54", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "Span", 
      "attrs": {
        "column": "0", 
        "end_column": "0", 
        "end_line": "0", 
        "line": "0", 
        "source_name": "55"
      }
    }, 
    {
      "type_key": "SourceName", 
      "repr_str": "functional_1/activation_5/Relu;StatefulPartitionedCall/functional_1/activation_5/Relu;functional_1/batch_normalization_5/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_5/FusedBatchNormV3;functional_1/depthwise_conv2d_2/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/depthwise;functional_1/depthwise_conv2d_2/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_2/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_301"
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "57", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [58]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "60", 
        "data": "11", 
        "span": "54", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "61", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [58]
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "65", 
        "data": "12", 
        "span": "63", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "Span", 
      "attrs": {
        "column": "0", 
        "end_column": "0", 
        "end_line": "0", 
        "line": "0", 
        "source_name": "64"
      }
    }, 
    {
      "type_key": "SourceName", 
      "repr_str": "functional_1/activation_6/Relu;StatefulPartitionedCall/functional_1/activation_6/Relu;functional_1/batch_normalization_6/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_6/FusedBatchNormV3;unknown_36;functional_1/conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;functional_1/conv2d_3/Conv2D;StatefulPartitionedCall/functional_1/conv2d_3/Conv2D1"
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "66", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [67]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "69", 
        "data": "13", 
        "span": "63", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "70", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [71]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "75", 
        "data": "14", 
        "span": "73", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "Span", 
      "attrs": {
        "column": "0", 
        "end_column": "0", 
        "end_line": "0", 
        "line": "0", 
        "source_name": "74"
      }
    }, 
    {
      "type_key": "SourceName", 
      "repr_str": "functional_1/activation_7/Relu;StatefulPartitionedCall/functional_1/activation_7/Relu;functional_1/batch_normalization_7/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_7/FusedBatchNormV3;functional_1/depthwise_conv2d_3/depthwise;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/depthwise;functional_1/depthwise_conv2d_3/BiasAdd;StatefulPartitionedCall/functional_1/depthwise_conv2d_3/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D;unknown_421"
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "76", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [77]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "79", 
        "data": "15", 
        "span": "73", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "80", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [77]
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "84", 
        "data": "16", 
        "span": "82", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "Span", 
      "attrs": {
        "column": "0", 
        "end_column": "0", 
        "end_line": "0", 
        "line": "0", 
        "source_name": "83"
      }
    }, 
    {
      "type_key": "SourceName", 
      "repr_str": "functional_1/activation_8/Relu;StatefulPartitionedCall/functional_1/activation_8/Relu;functional_1/batch_normalization_8/FusedBatchNormV3;StatefulPartitionedCall/functional_1/batch_normalization_8/FusedBatchNormV3;unknown_48;functional_1/conv2d_4/BiasAdd;StatefulPartitionedCall/functional_1/conv2d_4/BiasAdd;functional_1/conv2d_4/Conv2D;StatefulPartitionedCall/functional_1/conv2d_4/Conv2D1"
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "85", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [86]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "88", 
        "data": "17", 
        "span": "82", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "relay.TensorType", 
      "attrs": {
        "dtype": "float32", 
        "shape": "89", 
        "span": "0"
      }
    }, 
    {
      "type_key": "Array", 
      "data": [90]
    }, 
    {
      "type_key": "IntImm", 
      "attrs": {
        "dtype": "int32", 
        "span": "0", 
        "value": "64"
      }
    }
  ], 
  "b64ndarrays": [
    "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"
  ], 
  "attrs": {"tvm_version": "0.17.0"}
}